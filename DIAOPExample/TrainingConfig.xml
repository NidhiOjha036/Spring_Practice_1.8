<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:c="http://www.springframework.org/schema/c"
       xsi:schemaLocation="
           http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

    <!-- <bean id="administrator" class="com.mikadosolutions.training.spring.di.AdministratorBean" /> -->

    <aop:aspectj-autoproxy /> <!-- Enable aop annotation-->

    <bean id="coreJavaCourse" class="com.mikadosolutions.training.spring.di.CoreJavaCourse">
        <constructor-arg value="80"/>
        <constructor-arg>
            <list>
                <value>OOPS</value>
                <value>Threads</value>
                <value>IO</value>
                <value>Collections</value>
            </list>
        </constructor-arg>
        <constructor-arg value="10000"/>
    </bean>

    <!-- Identifying parameters by type -->
    <!--<bean id="coreJavaCourse" class="com.mikadosolutions.training.spring.di.CoreJavaCourse">
        <constructor-arg type="int" value="80"/>
        <constructor-arg>
            <list>
                <value>OOPS</value>
                <value>Threads</value>
                <value>IO</value>
                <value>Collections</value>
            </list>
        </constructor-arg>
        <constructor-arg type="double" value="10000"/>
    </bean>-->

    <!-- Identifying parameters by index -->
  <!--  <bean id="coreJavaCourse" class="com.mikadosolutions.training.spring.di.CoreJavaCourse">
        <constructor-arg index="1" value="80"/>
        <constructor-arg>
            <list>
                <value>OOPS</value>
                <value>Threads</value>
                <value>IO</value>
                <value>Collections</value>
            </list>
        </constructor-arg>
        <constructor-arg index="2" value="10000"/>
    </bean>-->

    <bean id="advancedJavaCourse" class="com.mikadosolutions.training.spring.di.AdvancedJavaCourse">
        <constructor-arg value="80"/>
        <constructor-arg>
            <list>
                <value>RMI</value>
                <value>Servlets</value>
                <value>Jdbc</value>
                <value>JSP</value>
            </list>
        </constructor-arg>
        <constructor-arg value="10000"/>
    </bean>

    <!-- You can use c namespace on name or index -->
    <!-- But to use name you should compile using debug mode (-g) -->
    <!-- <bean id="advancedJavaCourse" class="com.mikadosolutions.training.spring.di.AdvancedJavaCourse" c:courseDuration="80" c:courseFees="10000"> -->

    <!-- using index -->
    <!-- <bean id="advancedJavaCourse" class="com.mikadosolutions.training.spring.di.AdvancedJavaCourse" c:_1="80" c:_2="10000">
        <constructor-arg>
            <list>
                <value>RMI</value>
                <value>Servlets</value>
                <value>Jdbc</value>
                <value>JSP</value>
            </list>
        </constructor-arg>
    </bean> -->

    <bean id="struts2Course" class="com.mikadosolutions.training.spring.di.Struts2Course">
        <property name="courseDuration" value="40"/>
        <property name="courseContents">
            <list>
                <value>Interceptors</value>
                <value>Validation</value>
                <value>I18N</value>
                <value>CustomTags</value>
            </list>
        </property>
        <property name="courseFees" value="6000"/>
    </bean>

    <bean id="hibernateCourse" class="com.mikadosolutions.training.spring.di.HibernateCourse">
        <property name="courseDuration" value="40"/>
        <property name="courseContents">
            <list>
                <value>Mapping Documents</value>
                <value>Persistent Objects</value>
                <value>HQL</value>
                <value>Transactions</value>
            </list>
        </property>
        <property name="courseFees" value="6000"/>
    </bean>

    <bean id="ejb3Course" class="com.mikadosolutions.training.spring.di.EJB3Course" p:courseDuration="40" p:courseFees="6000">
        <property name="courseContents">
            <list>
                <value>SessionBeans</value>
                <value>MDBS</value>
                <value>JPA</value>
            </list>
        </property>
    </bean>

    <bean id="dotNetCourse" class="com.mikadosolutions.training.spring.di.DotNetCourse" p:courseDuration="150" p:courseFees="18000">
        <property name="courseContents">
            <list>
                <value>C#</value>
                <value>ADO.net</value>
                <value>ASP.net</value>
            </list>
        </property>
    </bean>

    <bean id="androidCourse" class="com.mikadosolutions.training.spring.di.AndroidCourse" p:courseDuration="120" p:courseFees="12000">
        <property name="courseContents">
            <list>
                <value>Activities</value>
                <value>Services</value>
                <value>BroadcastReceivers</value>
                <value>ContentProviders</value>
            </list>
        </property>
    </bean>

    <bean id="sanjay" class="com.mikadosolutions.training.spring.di.JavaTrainer">
        <constructor-arg value="Sanjay Makhija"/>
        <constructor-arg>
            <set>
                <value>Core Java</value>
                <value>Advanced Java</value>
                <value>Struts2</value>
                <value>Spring</value>
                <value>EJB</value>
            </set>
        </constructor-arg>
    </bean>

    <bean id="praful" class="com.mikadosolutions.training.spring.di.JavaTrainer">
        <constructor-arg value="Praful Vernekar"/>
        <constructor-arg>
            <set>
                <value>Core Java</value>
                <value>Advanced Java</value>
                <value>Hibernate</value>
                <value>EJB</value>
            </set>
        </constructor-arg>
    </bean>

<bean id="pankaj" class="com.mikadosolutions.training.spring.di.DotNetTrainer">
    <property name="name" value="Pankaj Upadhya" />
    <property name="specialties">
        <set>
            <value>C#</value>
            <value>ADO</value>
            <value>ASP</value>
        </set>
    </property>
</bean>

<bean id="nilesh" class="com.mikadosolutions.training.spring.di.JavaDotNetTrainer">
    <property name="name" value="Nilesh Shah" />
    <property name="specialties">
        <set>
            <value>C#</value>
            <value>Java</value>
            <value>ASP</value>
        </set>
    </property>
</bean>

<bean id="ajay" class="com.mikadosolutions.training.spring.di.AndroidTrainer" p:name="Ajay Bhosekar">
    <property name="specialties">
        <set>
            <value>android</value>
        </set>
    </property>
</bean>



<bean id="mikado" class="com.mikadosolutions.training.spring.di.MikadoSolutions" factory-method="getMikadoSolutions">
    <property name="trainers">
        <list>
            <ref bean="sanjay"/>
            <ref bean="praful"/>
            <ref bean="pankaj"/>
            <ref bean="pankaj"/>
            <ref bean="ajay"/>
        </list>
    </property>
    <property name="courses">
        <set>
            <ref bean="coreJavaCourse"/>
            <ref bean="advancedJavaCourse"/>
            <ref bean="struts2Course"/>
            <ref bean="hibernateCourse"/>
            <ref bean="ejb3Course"/>
            <ref bean="dotNetCourse"/>
            <ref bean="androidCourse"/>
        </set>
    </property>
    <!-- <property name="courseTrainers">
        <map>
            <entry key-ref="coreJavaCourse" value-ref="sanjay"/>
            <entry key-ref="advancedJavaCourse" value-ref="sanjay"/>
            <entry key-ref="struts2Course" value-ref="sanjay"/>
            <entry key-ref="hibernateCourse" value-ref="praful"/>
        </map>
    </property> -->
</bean>

<bean id="trainingWorkshop" class="com.mikadosolutions.training.spring.di.TrainingWorkshop" p:trainingCompany-ref="mikado" />

<bean id="participants" class="com.mikadosolutions.training.spring.di.Participants"/>
<!-- <aop:config>
    <aop:aspect ref="participants">
        <aop:before pointcut="execution(* com.mikadosolutions.training.spring.di.JavaTrainer.train(..))" method="takeSeats"/>
        <aop:before pointcut="execution(* com.mikadosolutions.training.spring.di.JavaTrainer.train(..))" method="switchOffPhones"/>
        <aop:after-returning pointcut="execution(* com.mikadosolutions.training.spring.di.JavaTrainer.train(..))" method="applaud"/>
        <aop:after-throwing pointcut="execution(* com.mikadosolutions.training.spring.di.JavaTrainer.train(..))" method="claimRefund"/>
    </aop:aspect>
</aop:config> -->

<!-- <aop:config>
    <aop:aspect ref="participants">
        <aop:pointcut id="training" expression="execution(* com.mikadosolutions.training.spring.di.JavaTrainer.train(..))" />
        <aop:before pointcut-ref="training" method="takeSeats"/>
        <aop:before pointcut-ref="training" method="switchOffPhones"/>
        <aop:after-returning pointcut-ref="training" method="applaud"/>
        <aop:after-throwing pointcut-ref="training" method="claimRefund"/>
    </aop:aspect>
</aop:config> -->

<!-- <aop:config>
    <aop:aspect ref="participants">
        <aop:pointcut id="training" expression="execution(* *.train(..))" />
        <aop:before pointcut-ref="training" method="takeSeats"/>
        <aop:before pointcut-ref="training" method="switchOffPhones"/>
        <aop:after-returning pointcut-ref="training" method="applaud"/>
        <aop:after-throwing pointcut-ref="training" method="claimRefund"/>
    </aop:aspect>
</aop:config> -->

<!-- All these proxies have is a relationship with trainer -->
<!-- <aop:config>
    <aop:aspect ref="participants">
        <aop:pointcut id="training" expression="execution(* *.train(..)) and this(com.mikadosolutions.training.spring.di.Trainer)" />
        <aop:before pointcut-ref="training" method="takeSeats"/>
        <aop:before pointcut-ref="training" method="switchOffPhones"/>
        <aop:after-returning pointcut-ref="training" method="applaud"/>
        <aop:after-throwing pointcut-ref="training" method="claimRefund"/>
    </aop:aspect>
</aop:config> -->

<!-- None of them is having a relationship with JavaTrainer -->
<!-- <aop:config>
    <aop:aspect ref="participants">
        <aop:pointcut id="training" expression="execution(* *.train(..)) and this(com.mikadosolutions.training.spring.di.JavaTrainer)" />
        <aop:before pointcut-ref="training" method="takeSeats"/>
        <aop:before pointcut-ref="training" method="switchOffPhones"/>
        <aop:after-returning pointcut-ref="training" method="applaud"/>
        <aop:after-throwing pointcut-ref="training" method="claimRefund"/>
    </aop:aspect>
</aop:config> -->

<!-- JavaTrainer -->
<!-- <aop:config>
    <aop:aspect ref="participants">
        <aop:pointcut id="training" expression="execution(* *.train(..)) and target(com.mikadosolutions.training.spring.di.JavaTrainer)" />
        <aop:before pointcut-ref="training" method="takeSeats"/>
        <aop:before pointcut-ref="training" method="switchOffPhones"/>
        <aop:after-returning pointcut-ref="training" method="applaud"/>
        <aop:after-throwing pointcut-ref="training" method="claimRefund"/>
    </aop:aspect>
</aop:config> -->

<!-- narrow its down only for sanjay and bean is only clause added by spring not aspectj -->
<!-- <aop:config>
    <aop:aspect ref="participants">
        <aop:pointcut id="training" expression="execution(* *.train(..)) and this(com.mikadosolutions.training.spring.di.Trainer) and bean(sanjay)" />
        <aop:before pointcut-ref="training" method="takeSeats"/>
        <aop:before pointcut-ref="training" method="switchOffPhones"/>
        <aop:after-returning pointcut-ref="training" method="applaud"/>
        <aop:after-throwing pointcut-ref="training" method="claimRefund"/>
    </aop:aspect>
</aop:config> -->

<!-- <aop:config>
    <aop:aspect ref="participants">
        <aop:pointcut id="training" expression="execution(* com.mikadosolutions.training.spring.di.JavaTrainer.train(..))" />
        <aop:around pointcut-ref="training" method="undergoTraining"/>
    </aop:aspect>
</aop:config> -->

<!-- <aop:config>
    <aop:aspect ref="participants">
        <aop:pointcut id="multitraining" expression="execution(* com.mikadosolutions.training.spring.di.JavaDotNetTrainer.train(String)) and args(technology)" />
        <aop:before pointcut-ref="multitraining" method="predictTraining" arg-names="technology"/>
    </aop:aspect>
</aop:config> -->

<!-- <aop:config>
    <aop:aspect>
        <aop:declare-parents
        types-matching="com.mikadosolutions.training.spring.di.Trainer+"
        implement-interface="com.mikadosolutions.training.spring.di.Employee"
        default-impl="com.mikadosolutions.training.spring.di.EmployeeImp1"
        />
    </aop:aspect>
</aop:config> -->

</beans>

